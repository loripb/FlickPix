{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/Development/code/mod-4/FlickPix/flickpix-frontend/src/App.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport FormContainer from './components/FormContainer';\nimport { withRouter } from 'react-router-dom';\nlet api = `http://localhost:4000/movies`;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      queues: [],\n      user: {\n        id: 0,\n        username: \"\",\n        user_queues: []\n      },\n      token: \"\"\n    };\n\n    this.handleResponse = response => {\n      if (response.user) {\n        localStorage.token = response.token;\n        this.setState({\n          user: response.user,\n          token: response.token\n        }, () => {\n          this.props.history.push(\"/\");\n        });\n      } else {\n        alert(response.error);\n      }\n    };\n\n    this.handleLoginSubmit = userInfo => {\n      console.log(\"Login form has been submitted\");\n      console.log(userInfo, 'from login submit');\n      fetch(\"http://localhost:4000/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(this.handleResponse);\n    };\n\n    this.handleRegisterSubmit = userInfo => {\n      console.log(\"Register form has been submitted\");\n      fetch(\"http://localhost:4000/users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: userInfo.username,\n          password: userInfo.password\n        })\n      }).then(r => r.json()).then(this.handleResponse);\n    };\n\n    this.handleLogoutButton = () => {\n      console.log(\"log me out\");\n    };\n\n    this.renderForm = routerProps => {\n      if (routerProps.location.pathname === \"/login\") {\n        return /*#__PURE__*/React.createElement(FormContainer, {\n          formName: \"Login Form\",\n          handleSubmit: this.handleLoginSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 14\n          }\n        });\n      } else if (routerProps.location.pathname === \"/register\") {\n        return /*#__PURE__*/React.createElement(FormContainer, {\n          formName: \"Register Form\",\n          handleSubmit: this.handleRegisterSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      fetch(\"http://localhost:4000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${localStorage.token}`\n        }\n      }).then(r => r.json()).then(this.handleResponse);\n    }\n\n    fetch(api).then(r => r.json()).then(data => this.setState({\n      movies: data.movies.results,\n      queues: data.queues\n    }));\n  }\n\n  render() {\n    console.log(this.state.user);\n    return /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: this.renderForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      render: this.renderForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => /*#__PURE__*/React.createElement(Home, {\n        userName: this.state.user.username,\n        movies: this.state.movies,\n        handleLogout: this.handleLogoutButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      render: () => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }\n      }, \"Page not Found\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/mbp/Development/code/mod-4/FlickPix/flickpix-frontend/src/App.js"],"names":["React","Switch","Route","Home","FormContainer","withRouter","api","App","Component","state","movies","queues","user","id","username","user_queues","token","handleResponse","response","localStorage","setState","props","history","push","alert","error","handleLoginSubmit","userInfo","console","log","fetch","method","headers","body","JSON","stringify","then","r","json","handleRegisterSubmit","password","handleLogoutButton","renderForm","routerProps","location","pathname","componentDidMount","data","results","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport FormContainer from './components/FormContainer';\n\nimport { withRouter } from 'react-router-dom'\n\nlet api = `http://localhost:4000/movies`;\n\nclass App extends React.Component {\n  state = {\n    movies: [],\n    queues: [],\n    user: {\n      id: 0,\n      username: \"\",\n      user_queues: []\n    },\n    token: \"\"\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      fetch(\"http://localhost:4000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${localStorage.token}`\n        }\n      })\n      .then(r => r.json())\n      .then(this.handleResponse)\n    }\n\n    fetch(api)\n    .then(r => r.json())\n    .then(data => this.setState({\n      movies: data.movies.results,\n      queues: data.queues\n    }))\n  }\n\n  handleResponse = (response) => {\n    if (response.user) {\n      localStorage.token = response.token\n      this.setState({\n        user: response.user,\n        token: response.token\n      }, () => {\n        this.props.history.push(\"/\")\n    })\n    } else {\n      alert(response.error)\n    }\n  }\n\n  handleLoginSubmit = (userInfo) => {\n    console.log(\"Login form has been submitted\")\n    console.log(userInfo, 'from login submit')\n\n    fetch(\"http://localhost:4000/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    })\n    .then(r => r.json())\n    .then(this.handleResponse)\n  }\n\n  handleRegisterSubmit = (userInfo) => {\n    console.log(\"Register form has been submitted\")\n    fetch(\"http://localhost:4000/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userInfo.username,\n        password: userInfo.password\n      })\n    })\n    .then(r => r.json())\n    .then(this.handleResponse)\n  }\n\n  handleLogoutButton = () => {\n    console.log(\"log me out\");\n  }\n\n  renderForm = (routerProps) => {\n    if(routerProps.location.pathname === \"/login\"){\n      return <FormContainer formName=\"Login Form\" handleSubmit={this.handleLoginSubmit}/>\n    } else if (routerProps.location.pathname === \"/register\") {\n      return <FormContainer formName=\"Register Form\" handleSubmit={this.handleRegisterSubmit}/>\n    }\n  }\n\n  render() {\n    console.log(this.state.user)\n    return (\n      <Switch>\n          <Route path=\"/login\" render={ this.renderForm } />\n          <Route path=\"/register\" render={ this.renderForm } />\n          <Route path=\"/\" exact render={() =>\n              <Home\n                userName={this.state.user.username}\n                movies={ this.state.movies }\n                handleLogout={this.handleLogoutButton}\n              />\n            } />\n          <Route render={ () => <p>Page not Found</p> } />\n      </Switch>\n    )\n  }\n}\n\nexport default withRouter(App)\n"]},"metadata":{},"sourceType":"module"}