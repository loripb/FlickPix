{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/Development/code/mod-4/FlickPix/flickpix-frontend/src/App.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nlet api = `http://localhost:4000/movies`;\nexport default class app extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      queues: [],\n      user: {\n        id: 0,\n        username: \"\",\n        user_queues: []\n      },\n      token: \"\"\n    };\n\n    this.handleResponse = response => {\n      if (response.user) {\n        localStorage.token = response.token;\n        this.setState({\n          user: response.user,\n          token: response.token\n        }, () => {\n          this.props.history.push(\"/profile\");\n        });\n      } else {\n        alert(response.error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${localStorage.token}`\n        }\n      }).then(r => r.json()).then(this.handleResponse);\n    }\n\n    fetch(api).then(r => r.json()).then(data => this.setState({\n      movies: data.movies.results,\n      users: data.users,\n      queues: data.queues\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Home, {\n      movies: this.state.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/mbp/Development/code/mod-4/FlickPix/flickpix-frontend/src/App.js"],"names":["React","Switch","Route","Home","api","app","Component","state","movies","queues","user","id","username","user_queues","token","handleResponse","response","localStorage","setState","props","history","push","alert","error","componentDidMount","fetch","headers","then","r","json","data","results","users","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,IAAIC,GAAG,GAAI,8BAAX;AAEA,eAAe,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAE,CADA;AAEJC,QAAAA,QAAQ,EAAE,EAFN;AAGJC,QAAAA,WAAW,EAAE;AAHT,OAHA;AAQNC,MAAAA,KAAK,EAAE;AARD,KADuC;;AAAA,SAgC/CC,cAhC+C,GAgC7BC,QAAD,IAAc;AAC7B,UAAIA,QAAQ,CAACN,IAAb,EAAmB;AACjBO,QAAAA,YAAY,CAACH,KAAb,GAAqBE,QAAQ,CAACF,KAA9B;AACA,aAAKI,QAAL,CAAc;AACZR,UAAAA,IAAI,EAAEM,QAAQ,CAACN,IADH;AAEZI,UAAAA,KAAK,EAAEE,QAAQ,CAACF;AAFJ,SAAd,EAGG,MAAM;AACP,eAAKK,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,SALD;AAMD,OARD,MAQO;AACLC,QAAAA,KAAK,CAACN,QAAQ,CAACO,KAAV,CAAL;AACD;AACF,KA5C8C;AAAA;;AAY/CC,EAAAA,iBAAiB,GAAG;AAClB,QAAIP,YAAY,CAACH,KAAjB,EAAwB;AACtBW,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,OAAO,EAAE;AACP,2BAAkB,UAAST,YAAY,CAACH,KAAM;AADvC;AAD4B,OAAlC,CAAL,CAKCa,IALD,CAKMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALX,EAMCF,IAND,CAMM,KAAKZ,cANX;AAOD;;AAEDU,IAAAA,KAAK,CAACrB,GAAD,CAAL,CACCuB,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKZ,QAAL,CAAc;AAC1BV,MAAAA,MAAM,EAAEsB,IAAI,CAACtB,MAAL,CAAYuB,OADM;AAE1BC,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAFc;AAG1BvB,MAAAA,MAAM,EAAEqB,IAAI,CAACrB;AAHa,KAAd,CAFd;AAOD;;AAgBDwB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAG,KAAK1B,KAAL,CAAWC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAlD8C","sourcesContent":["import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\n\nlet api = `http://localhost:4000/movies`;\n\nexport default class app extends React.Component {\n  state = {\n    movies: [],\n    queues: [],\n    user: {\n      id: 0,\n      username: \"\",\n      user_queues: []\n    },\n    token: \"\"\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${localStorage.token}`\n        }\n      })\n      .then(r => r.json())\n      .then(this.handleResponse)\n    }\n\n    fetch(api)\n    .then(r => r.json())\n    .then(data => this.setState({\n      movies: data.movies.results,\n      users: data.users,\n      queues: data.queues\n    }))\n  }\n\n  handleResponse = (response) => {\n    if (response.user) {\n      localStorage.token = response.token\n      this.setState({\n        user: response.user,\n        token: response.token\n      }, () => {\n        this.props.history.push(\"/profile\")\n      })\n    } else {\n      alert(response.error)\n    }\n  }\n\n  render() {\n    return (\n      <Home movies={ this.state.movies }/>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}