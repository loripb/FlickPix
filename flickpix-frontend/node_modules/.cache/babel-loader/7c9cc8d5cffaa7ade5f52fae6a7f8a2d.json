{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/Development/code/mod-4/FlickPix/flickpix-frontend/src/App.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport VerticalSidebar from './components/VerticalSidebar';\nimport { Button, Checkbox, Grid, Header, Icon, Image, Menu, Segment, Sidebar } from 'semantic-ui-react';\nexport default class app extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      animation: 'overlay',\n      direction: 'left',\n      dimmed: false,\n      visible: false\n    };\n\n    this.handleAnimationChange = animation => () => this.setState(prevState => ({\n      animation,\n      visible: !prevState.visible\n    }));\n\n    this.handleDimmedChange = (e, {\n      checked\n    }) => this.setState({\n      dimmed: checked\n    });\n\n    this.handleDirectionChange = direction => () => this.setState({\n      direction,\n      visible: false\n    });\n  }\n\n  render() {\n    const {\n      animation,\n      dimmed,\n      direction,\n      visible\n    } = this.state;\n    const vertical = direction === 'bottom' || direction === 'top';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      class: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui red ribbon labe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"FlickPix\")), React.createElement(\"i\", {\n      className: \"bars icon\",\n      onClick: this.handleAnimationChange('scale down'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Sidebar.Pushable, {\n      as: Segment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, vertical ? null : React.createElement(VerticalSidebar, {\n      animation: animation,\n      direction: direction,\n      visible: visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Sidebar.Pusher, {\n      dimmed: dimmed && visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui text container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui fluid red massive button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Get a random Movie!\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mbp/Development/code/mod-4/FlickPix/flickpix-frontend/src/App.js"],"names":["PropTypes","React","Component","VerticalSidebar","Button","Checkbox","Grid","Header","Icon","Image","Menu","Segment","Sidebar","app","state","animation","direction","dimmed","visible","handleAnimationChange","setState","prevState","handleDimmedChange","e","checked","handleDirectionChange","render","vertical"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SACEC,MADF,EAEEC,QAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,IAPF,EAQEC,OARF,EASEC,OATF,QAUO,mBAVP;AAYA,eAAe,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCY,KADyC,GACjC;AACNC,MAAAA,SAAS,EAAE,SADL;AAENC,MAAAA,SAAS,EAAE,MAFL;AAGNC,MAAAA,MAAM,EAAE,KAHF;AAINC,MAAAA,OAAO,EAAE;AAJH,KADiC;;AAAA,SAQzCC,qBARyC,GAQhBJ,SAAD,IAAe,MACrC,KAAKK,QAAL,CAAeC,SAAD,KAAgB;AAAEN,MAAAA,SAAF;AAAaG,MAAAA,OAAO,EAAE,CAACG,SAAS,CAACH;AAAjC,KAAhB,CAAd,CATuC;;AAAA,SAWzCI,kBAXyC,GAWpB,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAoB,KAAKJ,QAAL,CAAc;AAAEH,MAAAA,MAAM,EAAEO;AAAV,KAAd,CAXA;;AAAA,SAazCC,qBAbyC,GAahBT,SAAD,IAAe,MACrC,KAAKI,QAAL,CAAc;AAAEJ,MAAAA,SAAF;AAAaE,MAAAA,OAAO,EAAE;AAAtB,KAAd,CAduC;AAAA;;AAgBzCQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,SAAF;AAAaE,MAAAA,MAAb;AAAqBD,MAAAA,SAArB;AAAgCE,MAAAA;AAAhC,QAA4C,KAAKJ,KAAvD;AACA,UAAMa,QAAQ,GAAGX,SAAS,KAAK,QAAd,IAA0BA,SAAS,KAAK,KAAzD;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAE,KAAKG,qBAAL,CAA2B,YAA3B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAME,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,EAAE,EAAER,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgB,QAAQ,GAAG,IAAH,GACP,oBAAC,eAAD;AACE,MAAA,SAAS,EAAEZ,SADb;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,OAAO,EAAEE,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASE,oBAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,MAAM,EAAED,MAAM,IAAIC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,CADF,CATF,CANF,CADF;AA0BD;;AA9CwC","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport VerticalSidebar from './components/VerticalSidebar'\nimport {\n  Button,\n  Checkbox,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Menu,\n  Segment,\n  Sidebar,\n} from 'semantic-ui-react'\n\nexport default class app extends Component {\n  state = {\n    animation: 'overlay',\n    direction: 'left',\n    dimmed: false,\n    visible: false,\n  }\n\n  handleAnimationChange = (animation) => () =>\n    this.setState((prevState) => ({ animation, visible: !prevState.visible }))\n\n  handleDimmedChange = (e, { checked }) => this.setState({ dimmed: checked })\n\n  handleDirectionChange = (direction) => () =>\n    this.setState({ direction, visible: false })\n\n  render() {\n    const { animation, dimmed, direction, visible } = this.state\n    const vertical = direction === 'bottom' || direction === 'top'\n\n    return (\n      <div>\n        <h2 class=\"ui header\">\n          <div class=\"ui red ribbon labe\">FlickPix</div>\n        </h2>\n        <i className=\"bars icon\" onClick={this.handleAnimationChange('scale down')}></i>\n\n        <Sidebar.Pushable as={Segment}>\n          {vertical ? null : (\n            <VerticalSidebar\n              animation={animation}\n              direction={direction}\n              visible={visible}\n            />\n          )}\n\n          <Sidebar.Pusher dimmed={dimmed && visible}>\n            <div className=\"ui container\">\n              <div className=\"ui text container\">\n                <button className=\"ui fluid red massive button\">Get a random Movie!</button>\n              </div>\n            </div>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}