{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/Development/code/mod-4/FlickPix/flickpix-frontend/src/App.js\";\nimport React from 'react';\nimport Home from './components/Home';\nlet api = `http://localhost:4000/movies`;\nexport default class app extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      queues: [],\n      user: {\n        id: 0,\n        username: \"\",\n        user_queues: []\n      },\n      token: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${localStorage.token}`\n        }\n      }).then(r => r.json()).then(this.handleResp);\n    }\n\n    fetch(api).then(r => r.json()).then(data => this.setState({\n      movies: data.movies.results,\n      users: data.users,\n      queues: data.queues\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Home, {\n      movies: this.state.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/mbp/Development/code/mod-4/FlickPix/flickpix-frontend/src/App.js"],"names":["React","Home","api","app","Component","state","movies","queues","user","id","username","user_queues","token","componentDidMount","localStorage","fetch","headers","then","r","json","handleResp","data","setState","results","users","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,IAAIC,GAAG,GAAI,8BAAX;AAEA,eAAe,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAE,CADA;AAEJC,QAAAA,QAAQ,EAAE,EAFN;AAGJC,QAAAA,WAAW,EAAE;AAHT,OAHA;AAQNC,MAAAA,KAAK,EAAE;AARD,KADuC;AAAA;;AAY/CC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,YAAY,CAACF,KAAjB,EAAwB;AACtBG,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,OAAO,EAAE;AACP,2BAAkB,UAASF,YAAY,CAACF,KAAM;AADvC;AAD4B,OAAlC,CAAL,CAKCK,IALD,CAKMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALX,EAMCF,IAND,CAMM,KAAKG,UANX;AAOD;;AAEDL,IAAAA,KAAK,CAACb,GAAD,CAAL,CACCe,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMI,IAAI,IAAI,KAAKC,QAAL,CAAc;AAC1BhB,MAAAA,MAAM,EAAEe,IAAI,CAACf,MAAL,CAAYiB,OADM;AAE1BC,MAAAA,KAAK,EAAEH,IAAI,CAACG,KAFc;AAG1BjB,MAAAA,MAAM,EAAEc,IAAI,CAACd;AAHa,KAAd,CAFd;AAOD;;AAEDkB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAG,KAAKpB,KAAL,CAAWC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AApC8C","sourcesContent":["import React from 'react';\nimport Home from './components/Home';\n\nlet api = `http://localhost:4000/movies`;\n\nexport default class app extends React.Component {\n  state = {\n    movies: [],\n    queues: [],\n    user: {\n      id: 0,\n      username: \"\",\n      user_queues: []\n    },\n    token: \"\"\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      fetch(\"http://localhost:3000/persist\", {\n        headers: {\n          \"Authorization\": `bearer ${localStorage.token}`\n        }\n      })\n      .then(r => r.json())\n      .then(this.handleResp)\n    }\n    \n    fetch(api)\n    .then(r => r.json())\n    .then(data => this.setState({\n      movies: data.movies.results,\n      users: data.users,\n      queues: data.queues\n    }))\n  }\n\n  render() {\n    return (\n      <Home movies={ this.state.movies }/>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}